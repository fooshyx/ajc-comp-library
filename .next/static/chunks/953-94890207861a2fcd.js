"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[953],{5953:(t,e,a)=>{a.d(e,{W:()=>d});let r="tft_units",o="tft_traits",i="tft_components",n="tft_items",s={getUnits:()=>{let t=localStorage.getItem(r);return t?JSON.parse(t):[]},saveUnits:t=>{localStorage.setItem(r,JSON.stringify(t))},getTraits:()=>{let t=localStorage.getItem(o);return t?JSON.parse(t):[]},saveTraits:t=>{localStorage.setItem(o,JSON.stringify(t))},getComponents:()=>{let t=localStorage.getItem(i);return t?JSON.parse(t):[]},saveComponents:t=>{localStorage.setItem(i,JSON.stringify(t))},getItems:()=>{let t=localStorage.getItem(n);return t?JSON.parse(t):[]},saveItems:t=>{localStorage.setItem(n,JSON.stringify(t))}},c="/api",l={generateId:()=>Date.now().toString(36)+Math.random().toString(36).substr(2),getTraits:async()=>{try{let t=await fetch("".concat(c,"/traits"));if(!t.ok)throw Error("Failed to fetch traits");return await t.json()}catch(t){return console.error("Error fetching traits:",t),[]}},saveTrait:async t=>{try{let e={...t,id:l.generateId()},a=await fetch("".concat(c,"/traits"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!a.ok)throw Error("Failed to save trait");return await a.json()}catch(t){return console.error("Error saving trait:",t),null}},updateTrait:async t=>{try{let e=await fetch("".concat(c,"/traits"),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw Error("Failed to update trait");return await e.json()}catch(t){return console.error("Error updating trait:",t),null}},deleteTrait:async t=>{try{return(await fetch("".concat(c,"/traits?id=").concat(t),{method:"DELETE"})).ok}catch(t){return console.error("Error deleting trait:",t),!1}},getUnits:async()=>{try{let t=await fetch("".concat(c,"/units"));if(!t.ok)throw Error("Failed to fetch units");return await t.json()}catch(t){return console.error("Error fetching units:",t),[]}},saveUnit:async t=>{try{let e={...t,id:l.generateId()},a=await fetch("".concat(c,"/units"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!a.ok)throw Error("Failed to save unit");return await a.json()}catch(t){return console.error("Error saving unit:",t),null}},updateUnit:async t=>{try{let e=await fetch("".concat(c,"/units"),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw Error("Failed to update unit");return await e.json()}catch(t){return console.error("Error updating unit:",t),null}},deleteUnit:async t=>{try{return(await fetch("".concat(c,"/units?id=").concat(t),{method:"DELETE"})).ok}catch(t){return console.error("Error deleting unit:",t),!1}},getComponents:async()=>{try{let t=await fetch("".concat(c,"/components"));if(!t.ok)throw Error("Failed to fetch components");return await t.json()}catch(t){return console.error("Error fetching components:",t),[]}},saveComponent:async t=>{try{let e={...t,id:l.generateId()},a=await fetch("".concat(c,"/components"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!a.ok)throw Error("Failed to save component");return await a.json()}catch(t){return console.error("Error saving component:",t),null}},updateComponent:async t=>{try{let e=await fetch("".concat(c,"/components"),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw Error("Failed to update component");return await e.json()}catch(t){return console.error("Error updating component:",t),null}},deleteComponent:async t=>{try{return(await fetch("".concat(c,"/components?id=").concat(t),{method:"DELETE"})).ok}catch(t){return console.error("Error deleting component:",t),!1}},getItems:async()=>{try{let t=await fetch("".concat(c,"/items"));if(!t.ok)throw Error("Failed to fetch items");return await t.json()}catch(t){return console.error("Error fetching items:",t),[]}},saveItem:async t=>{try{let e={...t,id:l.generateId()},a=await fetch("".concat(c,"/items"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!a.ok)throw Error("Failed to save item");return await a.json()}catch(t){return console.error("Error saving item:",t),null}},updateItem:async t=>{try{let e=await fetch("".concat(c,"/items"),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw Error("Failed to update item");return await e.json()}catch(t){return console.error("Error updating item:",t),null}},deleteItem:async t=>{try{return(await fetch("".concat(c,"/items?id=").concat(t),{method:"DELETE"})).ok}catch(t){return console.error("Error deleting item:",t),!1}}};class h{getCacheMetadata(t){if(!this.isClient)return null;try{let e=localStorage.getItem("".concat(t,"_metadata"));return e?JSON.parse(e):null}catch(t){return null}}setCacheMetadata(t,e){if(this.isClient)try{localStorage.setItem("".concat(t,"_metadata"),JSON.stringify(e))}catch(t){}}isCacheValid(t){let e=this.getCacheMetadata(t);if(!e)return!1;let a=Date.now(),r=new Date(e.lastUpdated).getTime(),o=1===e.version;return a-r<36e5&&o}updateCacheMetadata(t){this.setCacheMetadata(t,{lastUpdated:new Date().toISOString(),version:1})}async getUnits(){try{if(this.isClient&&this.isCacheValid("units")){let t=s.getUnits();if(t.length>0)return t}let t=await l.getUnits();return this.isClient&&(s.saveUnits(t),this.updateCacheMetadata("units")),t}catch(t){if(console.error("Error fetching units:",t),this.isClient)return s.getUnits();return[]}}async getTraits(){try{if(this.isClient&&this.isCacheValid("traits")){let t=s.getTraits();if(t.length>0)return t}let t=await l.getTraits();return this.isClient&&(s.saveTraits(t),this.updateCacheMetadata("traits")),t}catch(t){if(console.error("Error fetching traits:",t),this.isClient)return s.getTraits();return[]}}async getComponents(){try{if(this.isClient&&this.isCacheValid("components")){let t=s.getComponents();if(t.length>0)return t}let t=await l.getComponents();return this.isClient&&(s.saveComponents(t),this.updateCacheMetadata("components")),t}catch(t){if(console.error("Error fetching components:",t),this.isClient)return s.getComponents();return[]}}async getItems(){try{if(this.isClient&&this.isCacheValid("items")){let t=s.getItems();if(t.length>0)return t}let t=await l.getItems();return this.isClient&&(s.saveItems(t),this.updateCacheMetadata("items")),t}catch(t){if(console.error("Error fetching items:",t),this.isClient)return s.getItems();return[]}}async getAllGameData(){try{if(this.isClient&&this.isCacheValid("units")&&this.isCacheValid("traits")&&this.isCacheValid("components")&&this.isCacheValid("items")){let t=s.getUnits(),e=s.getTraits(),a=s.getComponents(),r=s.getItems();if(t.length>0&&e.length>0&&a.length>0&&r.length>0)return{units:t,traits:e,components:a,items:r}}let[t,e,a,r]=await Promise.all([l.getUnits(),l.getTraits(),l.getComponents(),l.getItems()]);return this.isClient&&(s.saveUnits(t),s.saveTraits(e),s.saveComponents(a),s.saveItems(r),this.updateCacheMetadata("units"),this.updateCacheMetadata("traits"),this.updateCacheMetadata("components"),this.updateCacheMetadata("items")),{units:t,traits:e,components:a,items:r}}catch(t){if(console.error("Error fetching all game data:",t),this.isClient)return{units:s.getUnits(),traits:s.getTraits(),components:s.getComponents(),items:s.getItems()};return{units:[],traits:[],components:[],items:[]}}}async getCompositions(t,e){try{let a=new URLSearchParams;t&&a.set("userId",t),e&&a.set("public","true");let r=await fetch("/api/compositions?".concat(a.toString()));if(!r.ok)throw Error("Failed to fetch compositions");return await r.json()}catch(t){return console.error("Error fetching compositions:",t),[]}}async saveComposition(t){try{console.log("hybridStorage.saveComposition called with:",t);let e=await fetch("/api/compositions",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(console.log("API response status:",e.status),console.log("API response ok:",e.ok),!e.ok){let t=await e.text();throw console.error("API error response:",t),Error("Failed to save composition: ".concat(e.status," ").concat(t))}let a=await e.json();return console.log("API success response:",a),a}catch(t){return console.error("Error saving composition:",t),null}}async updateComposition(t){try{let e=await fetch("/api/compositions",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw Error("Failed to update composition");return await e.json()}catch(t){return console.error("Error updating composition:",t),null}}async deleteComposition(t){try{return(await fetch("/api/compositions?id=".concat(t),{method:"DELETE"})).ok}catch(t){return console.error("Error deleting composition:",t),!1}}async refreshCache(){try{console.log("Refreshing game data cache...");let[t,e,a,r]=await Promise.all([l.getUnits(),l.getTraits(),l.getComponents(),l.getItems()]);this.isClient&&(s.saveUnits(t),s.saveTraits(e),s.saveComponents(a),s.saveItems(r),this.updateCacheMetadata("units"),this.updateCacheMetadata("traits"),this.updateCacheMetadata("components"),this.updateCacheMetadata("items")),console.log("Cache refreshed successfully")}catch(t){console.error("Error refreshing cache:",t)}}clearCache(){if(this.isClient)try{localStorage.removeItem("tft_units"),localStorage.removeItem("tft_traits"),localStorage.removeItem("tft_components"),localStorage.removeItem("tft_items"),localStorage.removeItem("units_metadata"),localStorage.removeItem("traits_metadata"),localStorage.removeItem("components_metadata"),localStorage.removeItem("items_metadata"),console.log("Cache cleared successfully")}catch(t){console.error("Error clearing cache:",t)}}getCacheStatus(){var t,e,a,r;return this.isClient?{units:{valid:this.isCacheValid("units"),lastUpdated:null==(t=this.getCacheMetadata("units"))?void 0:t.lastUpdated},traits:{valid:this.isCacheValid("traits"),lastUpdated:null==(e=this.getCacheMetadata("traits"))?void 0:e.lastUpdated},components:{valid:this.isCacheValid("components"),lastUpdated:null==(a=this.getCacheMetadata("components"))?void 0:a.lastUpdated},items:{valid:this.isCacheValid("items"),lastUpdated:null==(r=this.getCacheMetadata("items"))?void 0:r.lastUpdated}}:{units:{valid:!1},traits:{valid:!1},components:{valid:!1},items:{valid:!1}}}constructor(){this.isClient=!0}}let d=new h}}]);